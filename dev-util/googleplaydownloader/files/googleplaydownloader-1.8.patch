diff -uNar googleplaydownloader/googleplaydownloader.py googleplaydownloader/googleplaydownloader/googleplaydownloader.py
--- googleplaydownloader/googleplaydownloader.py	2015-09-28 02:16:43.000000000 +1000
+++ googleplaydownloader/googleplaydownloader.py	2015-11-12 15:59:34.860293901 +1100
@@ -19,9 +19,10 @@
 HERE = os.path.abspath(os.path.dirname(__file__))
 _icons_path = os.path.join(HERE, 'img')
 
-from ext_libs.googleplay_api.googleplay import GooglePlayAPI #GooglePlayAPI
-from ext_libs.googleplay_api.googleplay import LoginError
-from ext_libs.androguard.core.bytecodes import apk as androguard_apk #Androguard
+sys.path.insert(0, os.path.join(HERE,'./ext_libs'))
+from googleplay_api.googleplay import GooglePlayAPI #GooglePlayAPI
+from googleplay_api.googleplay import LoginError
+from androguard.core.bytecodes import apk as androguard_apk #Androguard
 
 
 config = {}
@@ -33,6 +34,7 @@
   config_dict["android_ID"] = ""
   config_dict["gmail_password"]= ""
   config_dict["gmail_address"] = ""
+  config_dict["directory"] = ""
 
   error = None
   if contact_developper == True:
@@ -52,6 +54,7 @@
     config_dict["android_ID"] = str(default_account_dict["android_ID"])
     config_dict["gmail_password"] = str(default_account_dict["gmail_password"])
     config_dict["gmail_address"] = str(default_account_dict["gmail_address"])
+    config_dict["directory"] = str(default_account_dict["download_folder_path"])
 
   input_dict.update(config_dict)
 
@@ -125,6 +128,7 @@
 def analyse_local_apks(list_of_apks, playstore_api, download_folder_path, dlg, return_function):
   list_apks_to_update = []
   for position, filename in enumerate(list_of_apks):
+    print "%i/%i : %s\nPlease Wait..." %(position+1, len(list_of_apks), filename)
     wx.CallAfter(dlg.Update, position, "%i/%i : %s\nPlease Wait..." %(position+1, len(list_of_apks), filename))
 
     #Get APK info from file on disk
@@ -165,6 +169,7 @@
     doc = m.docV2
     title = doc.title
     vc = doc.details.appDetails.versionCode
+    print "%i/%i : %s\n%s\nSize : %s\nPlease Wait..." %(position+1, len(list_of_packages_to_download), title, packagename, sizeof_fmt(doc.details.appDetails.installationSize))
 
     #Update progress dialog
     wx.CallAfter(dlg.Update, position, "%i/%i : %s\n%s\nSize : %s\nPlease Wait...(there is no download progression)" %(position+1, len(list_of_packages_to_download), title, packagename, sizeof_fmt(doc.details.appDetails.installationSize)))
@@ -296,12 +301,22 @@
     self.SetMinSize((700,400))
     search_entry.SetFocus()
 
+    self.autoUpdate = False
+
 
   def prepare_analyse_apks(self, event):
-    if self.ask_download_folder_path() == True:
+#    if self.ask_download_folder_path() == True:
+    if self.autoUpdate == False:
+      if self.ask_download_folder_path() == True:
+        download_folder_path = config["download_folder_path"]
+      else:
+        return True
+    else:
+
       download_folder_path = config["download_folder_path"]
       list_of_apks = [filename for filename in os.listdir(download_folder_path) if os.path.splitext(filename)[1] == ".apk"]
       if len(list_of_apks) > 0:
+        print "Updating APKs"
         dlg = wx.ProgressDialog("Updating APKs",
                                    "_" * 30 + "\n"*2,
                                    maximum = len(list_of_apks),
@@ -379,6 +394,7 @@
       config["android_ID"] = dlg.android_ID.GetValue()
       config["gmail_address"] = dlg.gmail_address.GetValue()
       config["gmail_password"] = dlg.gmail_password.GetValue()
+      config["download_folder_path"] = dlg.directory.GetValue()
 
 
     dlg.Destroy()
@@ -415,10 +431,16 @@
           message += "\n%s" % package_name
         message += "\n%s\n" % exception
 
-    #Show info dialog
-    dlg = wx.MessageDialog(self, message,'Download report', wx.OK | wx.ICON_INFORMATION)
-    dlg.ShowModal()
-    dlg.Destroy()
+    print message
+    if self.autoUpdate == False:
+      #Show info dialog
+      dlg = wx.MessageDialog(self, message,'Download report', wx.OK | wx.ICON_INFORMATION)
+      dlg.ShowModal()
+      dlg.Destroy()
+    else:
+      self.autoUpdate = False
+      quit()
+
 
   def ask_download_folder_path(self):
     dlg = wx.DirDialog(self, "Choose a download folder:",  defaultPath = config["download_folder_path"], style=wx.DD_DEFAULT_STYLE)
@@ -479,12 +501,19 @@
       for packagename, filename, apk_version_code, store_version_code in list_apks_to_update :
         message += u"\n%s Version : %s -> %s" % (filename ,apk_version_code, store_version_code)
         list_of_packages_to_download.append([packagename, filename])
-      message += "\n\nDo you agree?"
-      dlg = wx.MessageDialog(self, message, 'Updating APKs', wx.ICON_INFORMATION|wx.YES_NO )
-      return_value = dlg.ShowModal()
-      dlg.Destroy()
+
+      print self.autoUpdate
+      if self.autoUpdate:
+        return_value = wx.ID_YES
+      else:
+        message += "\n\nDo you agree?"
+        dlg = wx.MessageDialog(self, message, 'Updating APKs', wx.ICON_INFORMATION|wx.YES_NO )
+        return_value = dlg.ShowModal()
+        dlg.Destroy()
+
 
       if return_value == wx.ID_YES :
+        print "Updating APKs"
         #Progress Dialog
         dlg = wx.ProgressDialog("Updating APKs",
                                  " " * 30 + "\n"*4,
@@ -493,6 +522,10 @@
                                  style = wx.PD_CAN_ABORT|wx.PD_AUTO_HIDE
                                  )
         thread.start_new_thread(download_selection, (self.playstore_api, list_of_packages_to_download, dlg, self.after_download))
+    else:
+        self.autoUpdate = False
+        quit()
+
 
 class ConfigDialog(wx.Dialog):
   def __init__(self, parent):
@@ -507,7 +540,7 @@
     sizer.Add(self.use_default_btn, 0, wx.ALL, 5)
     sizer.Add(self.use_custom_btn, 0, wx.ALL, 5)
 
-    self.gridSizer = gridSizer = wx.FlexGridSizer(rows=5, cols=2, hgap=5, vgap=5)
+    self.gridSizer = gridSizer = wx.FlexGridSizer(rows=6, cols=2, hgap=5, vgap=5)
     sizer.Add(self.gridSizer, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5)
 
     self.custom_widgets = []
@@ -548,6 +581,13 @@
     gridSizer.Add(label,0, wx.ALIGN_CENTER_VERTICAL|wx.LEFT,5)
     gridSizer.Add(self.language,1, wx.EXPAND|wx.ALIGN_CENTRE|wx.ALL, 5)
 
+    label = wx.StaticText(self, -1, "Directory:")
+    self.custom_widgets.append(label)
+    self.directory  = wx.TextCtrl(self, -1, "", size=(text_size,-1))
+    self.custom_widgets.append(self.directory)
+    gridSizer.Add(label,0, wx.ALIGN_CENTER_VERTICAL|wx.LEFT,5)
+    gridSizer.Add(self.directory,1, wx.EXPAND|wx.ALIGN_CENTRE|wx.ALL, 5)
+
     line = wx.StaticLine(self, -1, size=(20,-1), style=wx.LI_HORIZONTAL)
     sizer.Add(line, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.RIGHT|wx.TOP, 5)
 
@@ -588,6 +628,7 @@
     self.android_ID.SetValue(config["android_ID"])
     self.gmail_address.SetValue(config["gmail_address"])
     self.gmail_password.SetValue(config["gmail_password"])
+    self.directory.SetValue(config["download_folder_path"])
 
   def generate_android_id(self, event=None):
     #Launch Java to create an AndroidID
@@ -644,6 +685,10 @@
 
     #Connection
     self.panel.connect_to_googleplay_api()
+    if len(sys.argv) > 1:
+        if sys.argv[1] == '--update':
+            self.panel.autoUpdate = True
+            self.panel.prepare_analyse_apks(self.panel)
 
 class App(wx.App):
   def OnInit(self):
diff -uNar googleplaydownloader/__init__.py googleplaydownloader/googleplaydownloader/__init__.py
--- googleplaydownloader/__init__.py	2015-01-27 10:25:26.000000000 +1100
+++ googleplaydownloader/__init__.py	2015-11-12 09:39:53.340011435 +1100
@@ -4,7 +4,7 @@
 
 import os
 HERE = os.path.abspath(os.path.dirname(__file__))
-with open(os.path.join(HERE, "googleplaydownloader", "version.txt"), "r") as f:
+with open(os.path.join(HERE, "version.txt"), "r") as f:
   __version__ = f.read().strip()
 
 from .googleplaydownloader import main as start_gui
